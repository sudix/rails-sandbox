version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  aws-ecr: circleci/aws-ecr@6.15.1

test_job: &test_job
  steps:
    - run: apk add bash curl
    - checkout
    - setup_remote_docker:
        version: 18.06.0-ce
        docker_layer_caching: false
    - run:
        name: Build image
        command: |
          docker-compose -f $COMPOSE_YAML build --parallel
    - run:
        name: Launch the database
        command: |
          docker-compose -f $COMPOSE_YAML up -d mysql
    - run:
        name: Wait db
        command: |
          docker-compose -f $COMPOSE_YAML run dockerize dockerize -wait tcp://mysql:3306 -timeout 1m
    - run:
        name: Setup database
        command: |
          docker-compose -f $COMPOSE_YAML run --rm -e RAILS_ENV=test app bundle exec rails db:create db:migrate
    - run:
        name: RSpec
        command: |
          docker-compose -f $COMPOSE_YAML run --rm app bundle exec rspec
    - slack/status

jobs:
  test:
    docker:
      - image: docker/compose:1.27.4
        environment:
          COMPOSE_YAML: docker/docker-compose-test.yaml
    <<: *test_job

workflows:
  version: 2
  test:
    jobs:
      - test
  staging-build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
         account-url: AWS_ECR_ACCOUNT_URL
         aws-access-key-id: AWS_ACCESS_KEY_ID
         aws-secret-access-key: AWS_SECRET_ACCESS_KEY
         checkout: true
         dockerfile: "/docker/app/Dockerfile.production"
         extra-build-args: "--build-arg RAILS_ENV=staging --build-arg RAILS_MASTER_KEY=${RAILS_MASTER_KEY_STAGING}"
         no-output-timeout: 20m
         path: "."
         region: AWS_REGION
         repo: "rails-sandbox-app-staging"
         skip-when-tags-exist: true
         tag: "${CIRCLE_SHA1}"
